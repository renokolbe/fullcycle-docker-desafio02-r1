version: '3'

services:

  nodeapp:
    build:
      context: node
    container_name: nodeserver
    ## Pode-se concatenar os arquivos / programas que deverao ser executados (no caso npm install e depois node index.js)
    ## entrypoint: dockerize -wait tcp://db:3306 -timeout 30s npm install node index.js
    ## Pode-se usar um arquivo .sh por exemplo com todos os comandos que devem ser executados
    ##entrypoint: dockerize -wait tcp://db:3306 -timeout 30s inicia_servico.sh
    ##entrypoint: inicia_servico.sh
    tty: true
    volumes:
      - ./node:/usr/src/app/
## Quando se trabalha com um unico compose não há necessidade de criar uma network. A mesma é criada por default entre todos os servicos
##    networks:
##      - node2-network
## Não há neceissdade de se usar a porta 3000, porque o NGINX fará a exposição
##    ports:
##      - "3000:3000"
    depends_on:
      - db
## O comando é suprimido porque ele será executado na sequencia do entrypoint
##    command: node index.js

  db:
    image: mysql:5.7
## Comando depreciado
##    command: --innodb-use-native-aio=0
    container_name: dbnode
    restart: always
    tty: true
    volumes:
      - ./mysql:/var/lib/mysql
    environment:
      - MYSQL_DATABASE=nodedb
      - MYSQL_ROOT_PASSWORD=root
## Não há mais necessiddade de se identificar o usuário
##      - MYSQL_USER=roor
## Quando se trabalha com um unico compose não há necessidade de criar uma networj. A mesma é criada por default entre todos os servicos
##    networks:
##      - node2-network

  nginx:
    restart: always
    build:
      context: nginx
      dockerfile: Dockerfile.prod
    container_name: nginx
## Quando se trabalha com um unico compose não há necessidade de criar uma networj. A mesma é criada por default entre todos os servicos
##    networks:
##      - node2-network
    ports:
      - "8080:80"
    depends_on:
      - db

## Quando se trabalha com um unico compose não há necessidade de criar uma networj. A mesma é criada por default entre todos os servicos
##networks:
##  node2-network:
##    driver: bridge